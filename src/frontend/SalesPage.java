/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import backend.InventoryBE;
import backend.InvoiceBE;
import backend.ProductBE;
import backend.UserAuth;
import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.intellijthemes.FlatArcOrangeIJTheme;
import entities.Inventory;
import entities.Invoice;
import entities.Product;
import entities.Sales;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Ajai Lee
 */
public class SalesPage extends javax.swing.JFrame {

    static List<Product> productList = null;
    static List<Sales> salesList = new ArrayList<Sales>();
    static double total = 0;
    static SalesPage instance;
    static boolean successFullyLoaded = false;

    static void buildUI() {
        if (instance == null) {
            instance = new SalesPage();
        }
        instance.setVisible(true);
        instance.requestFocus();
    }

    /**
     * Creates new form ViewSupplier
     */
    private SalesPage() {
        initComponents();
        loadInvoiceNumber();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_InvoiceId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_productId = new javax.swing.JTextField();
        txt_qty = new javax.swing.JTextField();
        txt_discount = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_gst = new javax.swing.JTextField();
        txt_product = new javax.swing.JComboBox<>();
        cmd_deleteOrReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_mrp = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txt_subTotal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lab_total = new javax.swing.JLabel();
        txt_paymentMethod = new javax.swing.JComboBox<>();
        cmd_draft = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        jLabel1.setText("Invoice Number");

        jLabel4.setText("Product ID");

        jLabel5.setText("Product Name");

        jLabel6.setText("Qty");

        jLabel7.setText("Discount %");

        txt_productId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_productIdKeyPressed(evt);
            }
        });

        txt_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_qtyKeyPressed(evt);
            }
        });

        txt_discount.setText("0");
        txt_discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_discountKeyPressed(evt);
            }
        });

        jLabel8.setText("GST %");

        txt_gst.setEditable(false);

        txt_product.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txt_product.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txt_productItemStateChanged(evt);
            }
        });

        cmd_deleteOrReset.setText("Reset");
        cmd_deleteOrReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmd_deleteOrResetMouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.No", "Product ID", "Product Name", "MRP", "GST", "Discount", "Qty", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        txt_mrp.setEditable(false);

        jLabel9.setText("MRP");

        jButton2.setText("CANCEL");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("CheckOut");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setText("ADD");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        txt_subTotal.setEditable(false);

        jLabel10.setText("Sub Total");

        lab_total.setBackground(new java.awt.Color(255, 255, 255));

        txt_paymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Online" }));
        txt_paymentMethod.setToolTipText("");

        cmd_draft.setText("Draft");
        cmd_draft.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmd_draftMouseClicked(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 0, 51));

        jPanel2.setBackground(new java.awt.Color(153, 255, 204));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_InvoiceId, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_productId, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txt_product, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_mrp, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_gst, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txt_discount, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_subTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmd_deleteOrReset))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txt_paymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmd_draft)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lab_total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_InvoiceId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_productId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_gst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmd_deleteOrReset)
                    .addComponent(txt_mrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(txt_subTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lab_total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(txt_paymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmd_draft))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        addToTable();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        JTextField totalJ = new JTextField(lab_total.getText());
        JTextField paid = new JTextField();
        JTextField balance = new JTextField();
        JTextField txt_customerNo = new JTextField();
        totalJ.setEditable(false);
        balance.setEditable(false);
        paid.addKeyListener(
                new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void keyPressed(KeyEvent e) {

            }

            @Override
            public void keyReleased(KeyEvent e) {
                balance.setText(String.valueOf(Double.valueOf(totalJ.getText()) - Double.valueOf(paid.getText())));
            }
        }
        );

        Object[] message = {
            "Customer Mobile No:",txt_customerNo,
            "Total Price:", totalJ,
            "Amount Paid:", paid,
            "Balance:", balance,};

        int option = JOptionPane.showConfirmDialog(null, message, "CheckOut", JOptionPane.OK_CANCEL_OPTION);
        
        if (txt_customerNo.getText().isBlank()||txt_customerNo.getText().length()<10||txt_customerNo.getText().length()>10) {
                JOptionPane.showMessageDialog(this, "Invalid Mobile Number");
                return;
            }
        if (option == JOptionPane.OK_OPTION) {
            if (paid.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Paid Balance Should Not Be Blank");
                return;
            }
            if (txt_InvoiceId.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Please Check The Supplier and Purchase Id");
                return;
            } else if (jTable1.getRowCount() == -1 || salesList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Cant Add An Empty List");
                return;
            }
            try {
                String purchaseId = txt_InvoiceId.getText();

                String addedBy = UserAuth.user.getId().toString();
                Date addTime = new Date();
                Invoice i = new Invoice(Long.valueOf(txt_InvoiceId.getText()), txt_customerNo.getText().isBlank() ? "unknown" : txt_customerNo.getText(), salesList, total, (String) txt_paymentMethod.getSelectedItem());

                boolean success = InvoiceBE.addInvoice(i);
                if (success) {
                    clearTable();
                    txt_InvoiceId.setText(InvoiceBE.getInvoiceId());
                    JOptionPane.showMessageDialog(this, "Products Successfully Added");
                } else {
                    JOptionPane.showMessageDialog(this, "Cant Add Products");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.toString());
            }

        } else {
            System.out.println("Login canceled");
        }

    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(null, "Sure? Do You want to Cancel?No Data will be saved", "Cancel",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            clearTable();

            txt_InvoiceId.setText("");

        } else if (result == JOptionPane.NO_OPTION) {
            return;
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            cmd_deleteOrReset.setText("Delete Row");
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void cmd_deleteOrResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmd_deleteOrResetMouseClicked

        if (cmd_deleteOrReset.getText().equals("Delete Row")) {
            DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
            int row_count = jTable1.getSelectedRow();
            double subTotal = (double) jTable1.getValueAt(row_count, 7);
            total = total - subTotal;
            lab_total.setText(String.valueOf((total)));
            System.out.println(salesList.get(row_count));
            salesList.remove(row_count);
            System.out.println(salesList.toString());
            tb.removeRow(row_count);
            for (int index = row_count; index < tb.getRowCount(); index++) {
                tb.setValueAt(index + 1, index, 0);
            }
            cmd_deleteOrReset.setText("Reset");
        } else {
            reset();
        }

    }//GEN-LAST:event_cmd_deleteOrResetMouseClicked

    private void txt_productItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txt_productItemStateChanged
        // TODO add your handling code here:
        int index = txt_product.getSelectedIndex();
        System.out.println(index);
        if (index == -1) {

        } else {
            Product p = productList.get(index);
            setDetails(p);
            txt_qty.requestFocus();
        }
    }//GEN-LAST:event_txt_productItemStateChanged

    private void txt_discountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_discountKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txt_discount.getText().isBlank() || Integer.parseInt(txt_discount.getText()) < 0) {
                return;
            } else {
                double withoutGst = Integer.valueOf(txt_qty.getText()) * Double.valueOf(txt_mrp.getText());
                System.out.println(withoutGst);
                double gstCost = (withoutGst * Integer.valueOf(txt_gst.getText())) / 100;
                double subTotal = withoutGst + gstCost;
                txt_subTotal.setText(String.valueOf(subTotal));
                addToTable();
            }
        }
    }//GEN-LAST:event_txt_discountKeyPressed

    private void txt_qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_qtyKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txt_qty.getText().isBlank() || Integer.parseInt(txt_qty.getText()) <= 0) {
                return;
            } else {
                txt_discount.requestFocus();
            }
        }
    }//GEN-LAST:event_txt_qtyKeyPressed

    private void txt_productIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_productIdKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_product.setSelectedItem(getName(txt_productId.getText()));
            int index = txt_product.getSelectedIndex();
            System.out.println(index);
            if (index == -1) {

            } else {
                Product p = productList.get(index);
                setDetails(p);
                txt_qty.requestFocus();
            }
        }
    }//GEN-LAST:event_txt_productIdKeyPressed

    private void cmd_draftMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmd_draftMouseClicked
        // TODO add your handling code here:
        final JOptionPane optionPane = new JOptionPane(
                "The only way to close this dialog is by\n"
                + "pressing one of the following buttons.\n"
                + "Do you understand?",
                JOptionPane.QUESTION_MESSAGE,
                JOptionPane.YES_NO_OPTION);

final JDialog dialog = new JDialog(this, 
                             "Click a button",
                             true);
dialog.setContentPane(optionPane);
dialog.setDefaultCloseOperation(
    JDialog.DO_NOTHING_ON_CLOSE);
dialog.addWindowListener(new WindowAdapter() {
    public void windowClosing(WindowEvent we) {
     
    }
});
optionPane.addPropertyChangeListener(
    new PropertyChangeListener() {
        public void propertyChange(PropertyChangeEvent e) {
            String prop = e.getPropertyName();

            if (dialog.isVisible() 
             && (e.getSource() == optionPane)
             && (prop.equals(JOptionPane.VALUE_PROPERTY))) {
                //If you were going to check something
                //before closing the window, you'd do
                //it here.
                dialog.setVisible(false);
            }
        }
    });
dialog.pack();
dialog.setVisible(true);

int value = ((Integer)optionPane.getValue()).intValue();
if (value == JOptionPane.YES_OPTION) {
   // setLabel("Good.");
} else if (value == JOptionPane.NO_OPTION) {
//    setLabel("Try using the window decorations "
//             + "to close the non-auto-closing dialog. "
//             + "You can't!");
}
    }//GEN-LAST:event_cmd_draftMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
           FlatArcOrangeIJTheme.setup();
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_deleteOrReset;
    private javax.swing.JButton cmd_draft;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lab_total;
    private javax.swing.JTextField txt_InvoiceId;
    private javax.swing.JTextField txt_discount;
    private javax.swing.JTextField txt_gst;
    private javax.swing.JTextField txt_mrp;
    private javax.swing.JComboBox<String> txt_paymentMethod;
    private javax.swing.JComboBox<String> txt_product;
    private javax.swing.JTextField txt_productId;
    private javax.swing.JTextField txt_qty;
    private javax.swing.JTextField txt_subTotal;
    // End of variables declaration//GEN-END:variables
  private void loadSupplierAndProduct() {

        productList = ProductBE.getAllProduct();

        txt_product.removeAllItems();
        for (entities.Product b : productList) {
            txt_product.addItem(b.getName());
        }
//        for(int i=100;i<4000;i++){
//            txt_product.addItem(String.valueOf(i));
//        }

        AutoCompleteDecorator.decorate(txt_product);
        successFullyLoaded = true;

    }

    private void setDetails(Product p) {
        txt_productId.setText(p.getId());
        System.out.println(p.getId());
        if (successFullyLoaded) {
            Inventory currentProduct = InventoryBE.getByProductId(p.getId());
            if (currentProduct == null) {
                JOptionPane.showMessageDialog(this, "You Dont Have This Stock In Shop");
                return;
            }
            txt_mrp.setText(currentProduct.getSellingPrice() + "");
            txt_gst.setText(currentProduct.getProduct().getGst() + "");
            jLabel3.setText(currentProduct.getQty() + " left");

        }

    }

    private String getName(String id) {
        System.out.println("typed Index" + id);
        for (Product p : productList) {
            System.out.println(p.getId());
            if (p.getId().equals(id)) {
                return p.getName();
            }
        }
        return "No Product Found";
    }

    private Product getProduct(String id) {
        System.out.println("typed Index" + id);
        for (Product p : productList) {
            System.out.println(p.getId());
            if (p.getId().equals(id)) {
                return p;
            }
        }
        return null;
    }

    private void addToTable() {
        try {
            if (txt_InvoiceId.getText().isBlank()) {
                return;
            }
            DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
            double subTotal = Double.valueOf(txt_subTotal.getText());
            System.out.println(subTotal
            );
            Object[] rowData = {jTable1.getRowCount() + 1, txt_productId.getText(), txt_product.getSelectedItem(), txt_mrp.getText(), txt_gst.getText(), txt_discount.getText(), txt_qty.getText(), subTotal};
            total += subTotal;
            lab_total.setText(String.valueOf(total));
            tb.addRow(rowData);
            entities.Sales s = new Sales(Long.valueOf(txt_InvoiceId.getText()), getProduct(txt_productId.getText()), Integer.valueOf(txt_qty.getText()), Integer.valueOf(txt_discount.getText()), subTotal);
            salesList.add(s);
            System.out.println(salesList.toString());
            reset();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, e.toString());
            throw e;
        }

    }

    private void clearTable() {
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        tb.setRowCount(0);
        salesList.clear();

    }

    private void reset() {
        txt_subTotal.setText("");
        txt_productId.setText("");
        txt_mrp.setText("");
        txt_qty.setText("");
        txt_gst.setText("");
        txt_discount.setText("");
        jLabel3.setText("");

    }

    private void loadInvoiceNumber() {
        txt_InvoiceId.setText(InvoiceBE.getInvoiceId());
        loadSupplierAndProduct();
    }
}
